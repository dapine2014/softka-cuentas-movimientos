##################################################################################
#                    CONFIGURACION DE LA BASE DE DATOS                           #
##################################################################################
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url= ${URLDB}
spring.datasource.hikari.username= ${USER}
spring.datasource.hikari.password= ${PWD}

spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.hibernate.ddl-auto= ${AUTO}
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql= ${BOOLFORMAT}
spring.jpa.properties.hibernate.type= ${TRACE}
############################################################################
#           CONFIGURACION DE PUERTO Y RUTAS                                #
############################################################################
server.port=${PORT:0}
server.servlet.context-path=/professional
#habilitar  api docs
springdoc.api-docs.enabled=true
springdoc.swagger-ui.enabled=true
#definir la ruta de la documentacion
springdoc.swagger-ui.path=/doc/swagger-ui.html
#paquetes y clase a escanear
#springdoc.packages-to-scan=
springdoc.paths-to-match=/text/**, /api/**, /xyz/**
###############################################################################
#                              NOMBRE DEL SERVICIO                            #
###############################################################################
spring.application.name=professional
###############################################################################
#                              CLOUD CONFIGURATION                            #
###############################################################################
eureka.client.serviceUrl.defaultZone=${EUREKA_URI}
eureka.instance.instance-id=${spring.application.name}:${spring.application.instance_id:${random.value}}
#eureka.instance.instance-id=${spring.application.name}:${server.port}
##################################################################################
#                                       KAFKA                                    #
##################################################################################
spring.kafka.bootstrap-servers=${URI_KAFKA}
spring.kafka.consumer.group-id=notification-service
spring.kafka.producer.retries=1
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
############################################################
#                        redis                             #
############################################################
spring.data.redis.host=${REDIS_HOST}
spring.data.redis.port=${REDIS_PORT}